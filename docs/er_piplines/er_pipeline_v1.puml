@startuml
participant Frontend
participant Backend
participant Postgres
participant Redis

== sign-up ==
Frontend -> Backend: HTTP: /api/v1/auth/sign-up (email, password, repeated_password)
Backend -> Postgres: PSQL: get user by email
alt user exists
Postgres --x Backend: PSQL: user
Backend --x Frontend: HTTP: 400
end alt
Postgres --> Backend: None
Backend -> Backend: compare password and repeated_password
alt password is not similar
Backend --x Frontend: HTTP: 400
end alt
Backend -> Postgres: PSQL: create user
Postgres --> Backend: PSQL: user
Backend -> Backend: create jwt token (sub=user)
Backend --> Frontend: HTTP: token

== sign-in ==
Frontend -> Backend: HTTP: /api/v1/auth/sign-in (email, password)
Backend -> Postgres: PSQL: get user by email
alt user not found
Postgres --x Backend: PSQL: None
Backend --x Frontend: HTTP: 404
end alt
Postgres --> Backend: PSQL: user
Backend -> Backend: create jwt token(sub=user)
Backend --> Frontend: HTTP: token

== google oauth ==
== get current user ==
== get user by id ==
== update user info ==
== update password ==
== update avatar ==
== create post ==
== update post ==
== delete post ==
== leave like on post ==
== send message ==
== delete message ==
== answer on message ==
== subscribe on creator ==
== unsubscribe from creator ==
== get subscribers ==
== get subscriptions ==
== create auction ==
== close auction ==
@enduml